{"version":3,"sources":["assets/jpg/nature.jpg","utils/types.js","reducers/search.js","actions/search.js","api/data-at-work-api.js","sagas/searchSaga.js","sagas/routerSaga.js","store/configureStore.js","utils/theme.js","components/Search/KeyWordSearcher.jsx","components/Search/SearchResults.jsx","elements/layouts.jsx","components/Search/Search.jsx","actions/router.js","containers/SearchPage.jsx","components/JobDetail/Skill.jsx","components/JobDetail/JobTypeDetail.jsx","components/JobDetail/JobDetail.jsx","containers/JobPage.jsx","containers/LayoutPage.jsx","App.js","reducers/index.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","actions","CLEAR_SEARCH","SEARCH_JOB_TITLE","SET_SEARCH_TEXT","SEARCH_JOB_ID","FETCH_KEYWORDS","FETCH_KEYWORDS_SUCCEEDED","FETCH_KEYWORDS_FAILED","FETCH_JOBS","FETCH_JOBS_SUCCEEDED","FETCH_JOBS_FAILED","SEND_CONTACT","SET_RESULTS","SEARCH_TEXT","GO_BACK","GO_TO_ROUTE","initialState","searchText","loadingAutocomplete","fetchedJob","search","state","arguments","length","undefined","action","type","Object","objectSpread","payload","searchTitle","searchResults","errorMessage","error","fetchingJob","fetchedJobDetail","text","searchId","id","setJobTitle","title","setSearchText","clearSearchText","API_ROOT","QUERY_PARAMATERS","START","ANYWHERE","END","DAW_API","AUTOCOMPLETE","position","term","axios","method","url","concat","SEARCH_JOBS_BY_ID","SEARCH_SKILLS_BY_JOB_ID","fetchAutocomplete","fetchJobs","searchKeywordSaga","searchJobSaga","keywords","regenerator_default","a","wrap","_context","prev","next","abrupt","put","call","sent","data","t0","response","message","stop","_marked","this","jobs","related_skills","_context2","_marked2","_context3","takeLatest","_marked3","_context4","_marked4","go","routeGoBack","goBackSaga","pushSaga","push","routerSaga_marked","goBack","routerSaga_marked2","takeEvery","routerSaga_marked3","routerSaga_marked4","sagaMiddleware","createSagaMiddleware","history","createHashHistory","logger","createLogger","level","collapsed","MUI_PALETTE","primary","main","secondary","tonalOffset","contrastThreshold","textColor","alternateTextColor","KeyWordSearcher","_this$props","props","value","onChange","react_default","createElement","TextField_default","placeholder","fullWidth","e","target","margin","Component","SearchResult","render","_this","results","goTo","react","_","map","result","i","Chip_default","key","style","label","suggestion","onClick","parent_uuid","variant","color","Main","styled","div","_templateObject","Layout","_templateObject2","Head","_templateObject3","background","Content","_templateObject4","DetailRow","_templateObject5","MainArea","_templateObject6","_templateObject7","SkillLine","_templateObject8","SkillHeader","_templateObject9","SkillName","_templateObject10","SkillElement","_templateObject11","SkillELementFirst","_templateObject12","Search","handleChangeText","_this$props$search","KeyWordSearcher_KeyWordSearcher","index_es","SearchResults_SearchResult","loading","route","connect","dispatch","bindActionCreators","searchActions","routerActions","Skill","_ref","skill_name","description","importance","width","startCase","marginBottom","valueBuffer","JobTypeDetail","padding","Button_default","ArrowBack_default","fontSize","take","related_job_titles","fontWeight","uuid","skills","sort","b","skill","JobDetail_Skill","assign","skill_uuid","JobDetail","componentDidMount","jobId","match","params","JobDetail_JobTypeDetail","LayoutPage","children","withRouter","muiTheme","createMuiTheme","typography","useNextVariants","fontFamily","join","palette","store","middleware","thunk","actionCreators","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","apply","createStore","combineReducers","router","connectRouter","routerMiddleware","run","configureStore","App","es","lib","basename","process","MuiThemeProvider_default","theme","CssBaseline_default","containers_LayoutPage","Switch","Route","path","JobPage","SearchPage","Boolean","location","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mGAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,6nBCA3BC,EAAU,CACnBC,aAAc,eACdC,iBAAkB,mBAClBC,gBAAiB,kBACjBC,cAAe,gBACfC,eAAgB,iBAChBC,yBAA0B,2BAC1BC,sBAAuB,wBACvBC,WAAY,aACZC,qBAAsB,uBACtBC,kBAAmB,oBACnBC,aAAc,eACdC,YAAa,cACbC,YAAa,cACbC,QAAS,UACTC,YAAa,eCXXC,EAAe,CACjBC,WAAY,GACZC,qBAAqB,EACrBC,YAAY,GA4DDC,EAzDA,WAA+B,IAA9BC,EAA8BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAxBN,EAAaS,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC1C,OAAQC,EAAOC,MACX,KAAK1B,EAAQG,gBACT,OAAYwB,OAAAC,EAAA,EAAAD,CAAA,GAAQN,EAAR,CAAeJ,WAAYQ,EAAOI,UAClD,KAAK7B,EAAQE,iBACT,OAAYyB,OAAAC,EAAA,EAAAD,CAAA,GAAQN,EAAR,CAAeS,YAAaL,EAAOI,UACnD,KAAK7B,EAAQC,aACT,OAAY0B,OAAAC,EAAA,EAAAD,CAAA,GAAQN,EAAR,CAAeJ,WAAY,GAAIc,cAAe,KAC9D,KAAK/B,EAAQK,eACT,OAAYsB,OAAAC,EAAA,EAAAD,CAAA,GACLN,EADK,CAERH,qBAAqB,EACrBc,aAAc,GACdC,OAAO,IAEf,KAAKjC,EAAQM,yBACT,OAAYqB,OAAAC,EAAA,EAAAD,CAAA,GACLN,EADK,CAERU,cAAeN,EAAOI,QACtBX,qBAAqB,IAE7B,KAAKlB,EAAQO,sBACT,OAAYoB,OAAAC,EAAA,EAAAD,CAAA,GACLN,EADK,CAERH,qBAAqB,EACrBc,aAAcP,EAAOI,QACrBI,OAAO,EACPF,mBAAeP,IAEvB,KAAKxB,EAAQQ,WACT,OAAYmB,OAAAC,EAAA,EAAAD,CAAA,GACLN,EADK,CAERF,YAAY,EACZe,aAAa,EACbF,aAAc,GACdC,OAAO,IAEf,KAAKjC,EAAQU,kBACT,OAAYiB,OAAAC,EAAA,EAAAD,CAAA,GACLN,EADK,CAERF,YAAY,EACZe,aAAa,EACbF,aAAcP,EAAOI,QACrBI,OAAO,IAEf,KAAKjC,EAAQS,qBACT,OAAYkB,OAAAC,EAAA,EAAAD,CAAA,GACLN,EADK,CAERc,iBAAkBV,EAAOI,QACzBV,YAAY,EACZe,aAAa,IAErB,QACI,OAAOb,IC3DNJ,EAAa,SAACmB,GAAD,MAAW,CACjCV,KAAM1B,EAAQa,YACdgB,QAASO,IAGAC,EAAW,SAACC,GAAD,MAAS,CAC7BZ,KAAM1B,EAAQI,cACdyB,QAASS,IAGAC,EAAc,SAACC,GAAD,MAAY,CACnCd,KAAM1B,EAAQE,iBACd2B,QAASW,IAGAC,EAAgB,SAACL,GAAD,MAAW,CACpCV,KAAM1B,EAAQG,gBACd0B,QAASO,IAGAM,EAAkB,iBAAO,CAClChB,KAAM1B,EAAQC,yDCtBZ0C,EAAW,0BACXC,EAAmB,CACrBC,MAAS,cACTC,SAAY,WACZC,IAAO,aAwBEC,EAAU,CACnBC,aAtB0B,SAACC,EAASC,GACpC,OAAOC,IAAM,CACTC,OAAQ,MACRC,IAAG,GAAAC,OAAKZ,EAAL,uBAAAY,OAAmCX,EAAiBM,GAApD,MAAAK,OAAkEJ,EAAlE,QAoBPK,kBAhBqB,SAAClB,GACtB,OAAOc,IAAM,CACTC,OAAQ,MACRC,IAAG,GAAAC,OAAKZ,EAAL,UAAAY,OAAsBjB,MAc7BmB,wBAViC,SAACnB,GAClC,OAAOc,IAAM,CACTC,OAAQ,MACRC,IAAG,GAAAC,OAAKZ,EAAL,UAAAY,OAAsBjB,EAAtB,kCCtBDoB,cAgBAC,cAgBOC,cAKAC,GArCjB,SAAUH,EAAkBjC,GAA5B,IAAAqC,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAC0B,KAAnB3C,EAAOI,QADd,CAAAqC,EAAAE,KAAA,eAAAF,EAAAG,OAAA,iBAEI,OAFJH,EAAAE,KAAA,EAEUE,YAAI,CAAC5C,KAAM1B,EAAQK,eAAgBwB,QAASJ,EAAOI,UAF7D,OAIuB,OAJvBqC,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAI6BG,YAAKvB,EAAQC,aAAc,QAAQxB,EAAOI,SAJvE,OAKM,OADMiC,EAJZI,EAAAM,KAAAN,EAAAE,KAAA,GAKYE,YAAI,CAAC5C,KAAM1B,EAAQM,yBAA0BuB,QAASiC,EAASW,OAL3E,QAAAP,EAAAE,KAAA,oBAAAF,EAAAC,KAAA,GAAAD,EAAAQ,GAAAR,EAAA,UAOSA,EAAAQ,GAAEC,SAPX,CAAAT,EAAAE,KAAA,SAQQ,OARRF,EAAAE,KAAA,GAQcE,YAAI,CAAC5C,KAAM1B,EAAQO,sBAAuBsB,QAASqC,EAAAQ,GAAEC,SAASF,KAAKxC,MAAM2C,UARvF,QAAAV,EAAAE,KAAA,iBAUQ,OAVRF,EAAAE,KAAA,GAUcE,YAAI,CAAC5C,KAAM1B,EAAQO,sBAAuBsB,QAASqC,EAAAQ,GAAEE,UAVnE,yBAAAV,EAAAW,SAAAC,EAAAC,KAAA,UAgBA,SAAUpB,EAAUlC,GAApB,IAAAuD,EAAAC,EAAA,OAAAlB,EAAAC,EAAAC,KAAA,SAAAiB,GAAA,cAAAA,EAAAf,KAAAe,EAAAd,MAAA,UACwB,KAAnB3C,EAAOI,QADZ,CAAAqD,EAAAd,KAAA,eAAAc,EAAAb,OAAA,iBAEE,OAFFa,EAAAd,KAAA,EAEQE,YAAI,CAAC5C,KAAM1B,EAAQQ,WAAYqB,QAASJ,EAAOI,UAFvD,OAIiB,OAJjBqD,EAAAf,KAAA,EAAAe,EAAAd,KAAA,EAIuBG,YAAKvB,EAAQQ,kBAAmB/B,EAAOI,SAJ9D,OAK2B,OADjBmD,EAJVE,EAAAV,KAAAU,EAAAd,KAAA,GAKiCG,YAAKvB,EAAQS,wBAAyBhC,EAAOI,SAL9E,QAMI,OADMoD,EALVC,EAAAV,KAAAU,EAAAd,KAAA,GAMUE,YAAI,CAAE5C,KAAM1B,EAAQS,qBAAsBoB,QAAQF,OAAAC,EAAA,EAAAD,CAAA,GAAKqD,EAAKP,KAASQ,EAAeR,QAN9F,QAAAS,EAAAd,KAAA,oBAAAc,EAAAf,KAAA,GAAAe,EAAAR,GAAAQ,EAAA,UAQOA,EAAAR,GAAEC,SART,CAAAO,EAAAd,KAAA,SASM,OATNc,EAAAd,KAAA,GASYE,YAAI,CAAC5C,KAAM1B,EAAQU,kBAAmBmB,QAASqD,EAAAR,GAAEC,SAASF,KAAKxC,MAAM2C,UATjF,QAAAM,EAAAd,KAAA,iBAWM,OAXNc,EAAAd,KAAA,GAWYE,YAAI,CAAC5C,KAAM1B,EAAQU,kBAAmBmB,QAASqD,EAAAR,GAAEE,UAX7D,yBAAAM,EAAAL,SAAAM,EAAAJ,KAAA,UAgBO,SAAUnB,IAAV,OAAAG,EAAAC,EAAAC,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,OACL,OADKgB,EAAAhB,KAAA,EACCiB,YAAWrF,EAAQG,gBAAiBuD,GADrC,wBAAA0B,EAAAP,SAAAS,EAAAP,MAKA,SAAUlB,IAAV,OAAAE,EAAAC,EAAAC,KAAA,SAAAsB,GAAA,cAAAA,EAAApB,KAAAoB,EAAAnB,MAAA,OACL,OADKmB,EAAAnB,KAAA,EACCiB,YAAWrF,EAAQI,cAAeuD,GADnC,wBAAA4B,EAAAV,SAAAW,EAAAT,qBCrCUU,eAIAC,gBAIAC,gBAIAC,IAZV,SAAUH,GAAGhE,GAAb,OAAAsC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACL,OADKF,EAAAE,KAAA,EACCE,YAAIuB,eAAKpE,EAAOI,UADjB,wBAAAqC,EAAAW,SAAAiB,EAAAf,MAIA,SAAUW,KAAV,OAAA3B,EAAAC,EAAAC,KAAA,SAAAiB,GAAA,cAAAA,EAAAf,KAAAe,EAAAd,MAAA,OACL,OADKc,EAAAd,KAAA,EACCE,YAAIyB,oBADL,wBAAAb,EAAAL,SAAAmB,EAAAjB,MAIA,SAAUY,KAAV,OAAA5B,EAAAC,EAAAC,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,OACL,OADKgB,EAAAhB,KAAA,EACC6B,YAAUjG,EAAQc,QAAS4E,IAD5B,wBAAAN,EAAAP,SAAAqB,GAAAnB,MAIA,SAAUa,KAAV,OAAA7B,EAAAC,EAAAC,KAAA,SAAAsB,GAAA,cAAAA,EAAApB,KAAAoB,EAAAnB,MAAA,OACH,OADGmB,EAAAnB,KAAA,EACG6B,YAAUjG,EAAQe,YAAa0E,IADlC,wBAAAF,EAAAV,SAAAsB,GAAApB,MCCP,IAAMqB,GAAiBC,cAGVC,GAAUC,cAIjBC,GAASC,uBAAa,CAC1BC,MAAO,OACPC,WAAW,aCjBAC,GAAc,CACvBlF,KAAM,QACNmF,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,WAER7E,MAAO,CACL6E,KAAM,WAERE,YAAa,GACbC,kBAAmB,EACnBC,UApBS,UAqBTC,mBAAoB,+BCpBHC,oLAMV,IAAAC,EAEqBtC,KAAKuC,MAAzBC,EAFDF,EAECE,MAAOC,EAFRH,EAEQG,SAEf,OAAOC,EAAAzD,EAAA0D,cAACC,GAAA3D,EAAD,CACL1B,GAAG,sBACHiF,MAAOA,EACPK,YAAY,2BACZC,WAAS,EACTL,SAAU,SAACM,GAAD,OAAON,EAASM,EAAEC,OAAOR,QACnCS,OAAO,iBAhBgCC,qDCGxBC,8MAYjBC,OAAS,WAAM,IAAAd,EAC2Be,EAAKd,MAAnCe,EADGhB,EACHgB,QAASpH,EADNoG,EACMpG,WAAYqH,EADlBjB,EACkBiB,KAE7B,OAAOb,EAAAzD,EAAA0D,cAACa,EAAA,SAAD,KACHd,EAAAzD,EAAA0D,cAAA,WACKc,KAAEC,IACCJ,EACA,SAACK,EAAOC,GAAR,OAAclB,EAAAzD,EAAA0D,cAACkB,GAAA5E,EAAD,CACV6E,IAAKF,EACLG,MAAO,CAACd,OAAQ,GAChBe,MAAOL,EAAOM,WACdC,QAAS,kBAAMX,EAAI,QAAA/E,OAASmF,EAAOQ,eACnCC,QAAQ,WACRC,MAAM,iBAIlB3B,EAAAzD,EAAA0D,cAAA,UAAKW,EAAQ9G,OAAb,yBAA2CN,EAA3C,qCA7B8BgH,6kECAnC,IAAMoB,GAAOC,KAAOC,IAAVC,KACN5C,GAAYC,QAAQC,MAUlB2C,GAASH,KAAOC,IAAVG,MAMNC,GAAOL,KAAOC,IAAVK,KAKKC,MAKTC,GAAUR,KAAOC,IAAVQ,MAKPC,GAAYV,KAAOC,IAAVU,MAWTC,IALeZ,KAAOC,IAAVY,MAKDb,KAAOC,IAAVa,OAORC,GAAYf,KAAOC,IAAVe,MASTC,GAAcjB,KAAOC,IAAViB,MAOXC,GAAYnB,KAAOC,IAAVmB,KAET9D,GAAYC,QAAQC,MAGpB6D,GAAerB,KAAOC,IAAVqB,MASZC,GAAoBvB,KAAOC,IAAVuB,eC9ETC,8MAmBnBC,iBAAmB,SAAClD,EAAEpG,GACpB0G,EAAKd,MAAM7E,cAAcqF,4EAGlB,IAAAmD,EAEqFlG,KAAKuC,MAAzFlG,OAAUa,EAFXgJ,EAEWhJ,MAAOD,EAFlBiJ,EAEkBjJ,aAAcf,EAFhCgK,EAEgChK,WAAYc,EAF5CkJ,EAE4ClJ,cAAeb,EAF3D+J,EAE2D/J,oBAElE,OAAOuG,EAAAzD,EAAA0D,cAAC2B,GAAD,KACL5B,EAAAzD,EAAA0D,cAAA,qCACAD,EAAAzD,EAAA0D,cAACwD,GAAD,CAAe3D,MAAOtG,EAAYuG,SAAUzC,KAAKiG,mBAChD/I,GAASwF,EAAAzD,EAAA0D,cAAA,UAAK1F,GACdd,GAAuBuG,EAAAzD,EAAA0D,cAACyD,GAAA,EAAD,MACvBpJ,GAAiBA,EAAcR,QAC9BkG,EAAAzD,EAAA0D,cAAC0D,GAAD,CACEnK,WAAYA,EACZoH,QAAStG,EACTsJ,QAASnK,EACToH,KAAMvD,KAAKuC,MAAMgB,eArCSL,aCPvBK,GAAO,SAACgD,GAAD,MAAY,CAC5B5J,KAAM1B,EAAQe,YACdc,QAASyJ,IAGAvF,GAAS,iBAAO,CACzBrE,KAAM1B,EAAQc,UCaHyK,yBAff,SAAyBlK,GACvB,MAAO,CACLD,OAAQC,EAAMD,SAMlB,SAA4BoK,GAC1B,OAAOC,YAAmB9J,OAAAC,EAAA,EAAAD,CAAA,GACrB+J,EACAC,GACFH,IAGUD,CAA6CR,6CCyB7Ca,GApCD,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,WAAYC,EAAfF,EAAeE,YAAaC,EAA5BH,EAA4BG,WAAYtF,EAAxCmF,EAAwCnF,MAAxC,OACZe,EAAAzD,EAAA0D,cAAA,OAAKoB,MAAO,CAACmD,MAAO,OAAQjE,OAAQ,KAClCP,EAAAzD,EAAA0D,cAAC6C,GAAD,KACI9C,EAAAzD,EAAA0D,cAAC+C,GAAD,KAAYjC,KAAE0D,UAAUJ,IACxBrE,EAAAzD,EAAA0D,cAAA,YAAOqE,IAEXtE,EAAAzD,EAAA0D,cAAC2C,GAAD,KACI5C,EAAAzD,EAAA0D,cAACmD,GAAD,mBACApD,EAAAzD,EAAA0D,cAAA,WACID,EAAAzD,EAAA0D,cAACyD,GAAA,EAAD,CAAgBhC,QAAQ,SAASL,MAAO,CAACqD,aAAc,GAAI/C,MAAM,YAAY7B,MAAkB,GAAXyE,EAAeI,YAAa,KAEpH3E,EAAAzD,EAAA0D,cAACiD,GAAD,KAAeqB,IAEnBvE,EAAAzD,EAAA0D,cAAC2C,GAAD,KACI5C,EAAAzD,EAAA0D,cAACmD,GAAD,uBACApD,EAAAzD,EAAA0D,cAAA,WACID,EAAAzD,EAAA0D,cAACyD,GAAA,EAAD,CAAgBrC,MAAO,CAACqD,aAAc,GAAIhD,QAAQ,SAASC,MAAM,YAAa7B,MAAa,GAANb,EAAU0F,YAAa,KAEhH3E,EAAAzD,EAAA0D,cAACiD,GAAD,KAAejE,MCyDR2F,8MAtCXlE,OAAS,WAAM,IACHhG,EAAqBiG,EAAKd,MAA1BnF,iBACR,OAAOsF,EAAAzD,EAAA0D,cAACa,EAAA,SAAD,KACHd,EAAAzD,EAAA0D,cAAA,UACGvF,EAAiBK,OAEpBiF,EAAAzD,EAAA0D,cAAA,KAAGoB,MAAO,CAACwD,QAAS,KACjBnK,EAAiB4J,aAEpBtE,EAAAzD,EAAA0D,cAAC6E,GAAAvI,EAAD,CAAQoF,MAAM,UAAUH,QAASb,EAAKd,MAAMvB,QAAQ0B,EAAAzD,EAAA0D,cAAC8E,GAAAxI,EAAD,CAAMyI,SAAS,UAAnE,kBACFhF,EAAAzD,EAAA0D,cAAA,4BAGED,EAAAzD,EAAA0D,cAACsC,GAAD,KACGxB,KAAEC,IACDD,KAAEkE,KACAvK,EAAiBwK,mBACjB,GAEF,SAAAnK,GAAK,OAAIiF,EAAAzD,EAAA0D,cAACkB,GAAA5E,EAAD,CAAM8E,MAAO,CAAC8D,WAAY,IAAK5E,OAAQ,GAAIoB,MAAM,UAAUD,QAAQ,WAAWN,IAAKrG,EAAMqK,KAAM9D,MAAOvG,EAAMA,WAG3HiF,EAAAzD,EAAA0D,cAAA,4BAGED,EAAAzD,EAAA0D,cAACsC,GAAD,KACGxB,KAAEC,IACDD,KAAEkE,KACAvK,EAAiB2K,OAAOC,KAAK,SAAC/I,EAAEgJ,GAAH,OAAShJ,EAAEgI,WAAagB,EAAEhB,YAAc,EAAIhI,EAAEgI,WAAagB,EAAEhB,WAAa,EAAI,IAC3G,IAEF,SAAAiB,GAAK,OAAIxF,EAAAzD,EAAA0D,cAACwF,GAADvL,OAAAwL,OAAA,CAAOtE,IAAKoE,EAAMG,WAAYtE,MAAO,CAACd,OAAQ,KAASiF,sCAlEpDhF,aCJPoF,8MAyCnBC,kBAAoB,WAAM,IACGC,EAAcnF,EAAKd,MAAtCkG,MAASC,OAAUF,MAC3BnF,EAAKd,MAAMjF,SAASkL,4EAIb,IAAAtC,EAC0DlG,KAAKuC,MAA9DlG,OAAUc,EADX+I,EACW/I,YAAaC,EADxB8I,EACwB9I,iBAAkBhB,EAD1C8J,EAC0C9J,WACjD,OAAGe,EAAoBuF,EAAAzD,EAAA0D,cAACyD,GAAA,EAAD,MAErB1D,EAAAzD,EAAA0D,cAACwC,GAAD,KACG/I,GAAcgB,GAAoBsF,EAAAzD,EAAA0D,cAACgG,GAAD,CAAe3H,OAAQhB,KAAKuC,MAAMvB,OAAQ5D,iBAAkBA,YApDhE8F,aCaxBsD,yBAff,SAAyBlK,EAAOiG,GAC9B,MAAO,CACLlG,OAAQC,EAAMD,SAMlB,SAA4BoK,GAC1B,OAAOC,YAAmB,CACxB1F,UACA1D,YACCmJ,IAGUD,CAA6C8B,cCVtDM,oLAOE,OAAOlG,EAAAzD,EAAA0D,cAAC+B,GAAD,KACHhC,EAAAzD,EAAA0D,cAACiC,GAAD,MACAlC,EAAAzD,EAAA0D,cAACoC,GAAD,KACK/E,KAAKuC,MAAMsG,kBAVH3F,aA6BV4F,oBAAWtC,kBAZ1B,SAAyBlK,EAAOiG,GAC5B,MAAO,IAKX,SAA4BkE,GACxB,OAAOC,YAAmB9J,OAAAC,EAAA,EAAAD,CAAA,GACnBgK,GACJH,IAGmBD,CAA6CoC,KCrBjEG,WZSKC,0BAAe,CAClBC,WAAY,CACRC,iBAAiB,EACjBxB,SAAU,GACVyB,WAAY,CACR,sBACA,aACFC,KAAK,MAEXC,QAASxH,MYbXyH,GbMwB,WAE5B,IAAMC,EAAa,GAGnBA,EAAWzI,KAAK0I,KAGhB,IAAMC,EAAc7M,OAAAC,EAAA,EAAAD,CAAA,GACf+J,GAIC+C,EAAkBC,OAAOC,qCAC3BD,OAAOC,qCAAqC,CAE5CH,mBAEAI,IAfc,GAmBR/I,KAAKgJ,IAAeC,WAAf,EAAmBR,IAClC,IcjDchI,EdiDR+H,EAAQU,acjDAzI,EdkDAA,GclDa0I,YAAgB,CACzCC,OAAQC,wBAAc5I,GACtBlF,YdiDAqN,EACEI,YACErI,GACAJ,GACA+I,2BAAiB7I,OAWvB,OALAF,GAAegJ,IAAIxL,GACnBwC,GAAegJ,IAAIvL,GACnBuC,GAAegJ,IAAIzJ,IACnBS,GAAegJ,IAAIxJ,IAEZyI,Ea9CKgB,GAsBCC,oLAlBX,OAAO7H,EAAAzD,EAAA0D,cAAC6H,EAAA,SAAD,CAAUlB,MAAOA,IACtB5G,EAAAzD,EAAA0D,cAAC8H,EAAA,gBAAD,CAAiBC,SAAUC,cAAwBpJ,QAASA,IAC1DmB,EAAAzD,EAAA0D,cAACiI,EAAA3L,EAAD,CAAkB4L,MAAO9B,IACvBrG,EAAAzD,EAAA0D,cAACa,EAAA,SAAD,KACEd,EAAAzD,EAAA0D,cAACmI,EAAA7L,EAAD,MACAyD,EAAAzD,EAAA0D,cAACoI,GAAD,KACErI,EAAAzD,EAAA0D,cAACqI,EAAA,EAAD,KACEtI,EAAAzD,EAAA0D,cAACsI,EAAA,EAAD,CAAOC,KAAK,eAAe9H,OAAQ,SAACb,GAAD,OAAWG,EAAAzD,EAAA0D,cAACwI,GAAY5I,MAC3DG,EAAAzD,EAAA0D,cAACsI,EAAA,EAAD,CAAOC,KAAK,IAAI9H,OAAQ,SAACb,GAAD,OAAWG,EAAAzD,EAAA0D,cAACyI,GAAe7I,mBAVjDW,aEdEmI,QACW,cAA7B1B,OAAO2B,SAASC,UAEe,UAA7B5B,OAAO2B,SAASC,UAEhB5B,OAAO2B,SAASC,SAAS9C,MACvB,2DCXN+C,IAASpI,OAAOV,EAAAzD,EAAA0D,cAAC8I,GAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.cd7e4b8c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nature.216b6329.jpg\";","export const actions = {\n    CLEAR_SEARCH: 'CLEAR_SEARCH',\n    SEARCH_JOB_TITLE: 'SEARCH_JOB_TITLE',\n    SET_SEARCH_TEXT: 'SET_SEARCH_TEXT',\n    SEARCH_JOB_ID: 'SEARCH_JOB_ID',\n    FETCH_KEYWORDS: 'FETCH_KEYWORDS',\n    FETCH_KEYWORDS_SUCCEEDED: 'FETCH_KEYWORDS_SUCCEEDED',\n    FETCH_KEYWORDS_FAILED: 'FETCH_KEYWORDS_FAILED',\n    FETCH_JOBS: 'FETCH_JOBS',\n    FETCH_JOBS_SUCCEEDED: 'FETCH_JOBS_SUCCEEDED',\n    FETCH_JOBS_FAILED: 'FETCH_JOBS_FAILED',\n    SEND_CONTACT: 'SEND_CONTACT',\n    SET_RESULTS: 'SET_RESULTS',\n    SEARCH_TEXT: 'SEARCH_TEXT',\n    GO_BACK: 'GO_BACK',\n    GO_TO_ROUTE: 'GO_TO_ROUTE',\n}","\nimport { actions } from '../utils/types';\n\n// use constant for initial state in order to reset if needed\nconst initialState = {\n    searchText: '',\n    loadingAutocomplete: false,\n    fetchedJob: false,\n}\n\nconst search = (state=initialState,action) => {\n    switch (action.type) {\n        case actions.SET_SEARCH_TEXT:\n            return state = { ...state, searchText: action.payload }\n        case actions.SEARCH_JOB_TITLE:\n            return state = { ...state, searchTitle: action.payload }\n        case actions.CLEAR_SEARCH:\n            return state = { ...state, searchText: '', searchResults: [] }\n        case actions.FETCH_KEYWORDS:\n            return state = { \n                ...state, \n                loadingAutocomplete: true,\n                errorMessage: '', \n                error: false \n            }\n        case actions.FETCH_KEYWORDS_SUCCEEDED:\n            return state = { \n                ...state, \n                searchResults: action.payload, \n                loadingAutocomplete: false \n            }\n        case actions.FETCH_KEYWORDS_FAILED:\n            return state = { \n                ...state, \n                loadingAutocomplete: false, \n                errorMessage: action.payload, \n                error: true ,\n                searchResults: undefined\n            }\n        case actions.FETCH_JOBS:\n            return state = { \n                ...state, \n                fetchedJob: false, \n                fetchingJob: true, \n                errorMessage: '', \n                error: false \n            }\n        case actions.FETCH_JOBS_FAILED:\n            return state = { \n                ...state, \n                fetchedJob: false, \n                fetchingJob: false, \n                errorMessage: action.payload, \n                error: true \n            }\n        case actions.FETCH_JOBS_SUCCEEDED:\n            return state = { \n                ...state, \n                fetchedJobDetail: action.payload, \n                fetchedJob: true, \n                fetchingJob: false\n            }   \n        default:\n            return state\n    }\n}\n\nexport default search;","import {\n    actions\n} from '../utils/types';\n\nexport const searchText = (text) => ({\n    type: actions.SEARCH_TEXT,\n    payload: text\n})\n\nexport const searchId = (id) => ({\n    type: actions.SEARCH_JOB_ID,\n    payload: id\n})\n\nexport const setJobTitle = (title) => ({\n    type: actions.SEARCH_JOB_TITLE,\n    payload: title\n})\n\nexport const setSearchText = (text) => ({\n    type: actions.SET_SEARCH_TEXT,\n    payload: text\n})\n\nexport const clearSearchText = () => ({\n    type: actions.CLEAR_SEARCH,\n})","import axios from 'axios';\n\n// Constants foe API\nconst API_ROOT = \"//api.dataatwork.org/v1\";\nconst QUERY_PARAMATERS = {\n    \"START\": 'begins_with',\n    \"ANYWHERE\": 'contains',\n    \"END\": 'ends_with',\n}\n\nconst getTitleBasedOnString = (position,term) => {\n    return axios({\n        method: 'get',\n        url: `${API_ROOT}/jobs/autocomplete?${QUERY_PARAMATERS[position]}=\"${term}\"`,\n    })\n}\n\nconst getJobsBasedOnId = (id) => {\n    return axios({\n        method: 'get',\n        url: `${API_ROOT}/jobs/${id}`,\n    })\n}\n\nconst getRelatedSkillsBasedOnJobId = (id) => {\n    return axios({\n        method: 'get',\n        url: `${API_ROOT}/jobs/${id}/related_skills`,\n    })\n}\n\nexport const DAW_API = {\n    AUTOCOMPLETE: getTitleBasedOnString,\n    SEARCH_JOBS_BY_ID: getJobsBasedOnId,\n    SEARCH_SKILLS_BY_JOB_ID: getRelatedSkillsBasedOnJobId\n\n}","import { call, put, takeLatest } from 'redux-saga/effects';\nimport {actions} from '../utils/types';\nimport {DAW_API} from '../api/data-at-work-api';\n\n// worker Saga: will be fired on SET_SEARCH_TEXT action\nfunction* fetchAutocomplete(action) {\n    if(action.payload === \"\") return;\n    yield put({type: actions.FETCH_KEYWORDS, payload: action.payload});\n   try {\n      const keywords = yield call(DAW_API.AUTOCOMPLETE, 'START',action.payload);\n      yield put({type: actions.FETCH_KEYWORDS_SUCCEEDED, payload: keywords.data});\n   } catch (e) {\n      if(e.response){\n        yield put({type: actions.FETCH_KEYWORDS_FAILED, payload: e.response.data.error.message});\n      }else{\n        yield put({type: actions.FETCH_KEYWORDS_FAILED, payload: e.message});\n      }\n   }\n}\n\n// worker Saga: will be fired on SET_SEARCH_TEXT action\nfunction* fetchJobs(action) {\n  if(action.payload === \"\") return;\n  yield put({type: actions.FETCH_JOBS, payload: action.payload});\n  try {\n    const jobs = yield call(DAW_API.SEARCH_JOBS_BY_ID, action.payload);\n    const related_skills = yield call(DAW_API.SEARCH_SKILLS_BY_JOB_ID, action.payload);\n    yield put({ type: actions.FETCH_JOBS_SUCCEEDED, payload: {...jobs.data, ...related_skills.data}});\n  } catch (e) {\n    if(e.response){\n      yield put({type: actions.FETCH_JOBS_FAILED, payload: e.response.data.error.message});\n    }else{\n      yield put({type: actions.FETCH_JOBS_FAILED, payload: e.message});\n    }\n  }\n}\n// Intercept SET_SEARCH_TEXT action type\nexport function* searchKeywordSaga() {\n  yield takeLatest(actions.SET_SEARCH_TEXT, fetchAutocomplete);\n}\n\n// Intercept SET_SEARCH_JOB_ID action type\nexport function* searchJobSaga() {\n  yield takeLatest(actions.SEARCH_JOB_ID, fetchJobs);\n}\n","import { push, goBack } from 'connected-react-router'\nimport { put, takeEvery } from 'redux-saga/effects'\nimport {actions} from '../utils/types';\n\n// Push Action Handler\nexport function* go(action) {\n  yield put(push(action.payload))\n}\n  // Go back handler\nexport function* routeGoBack() {\n  yield put(goBack())\n}\n\nexport function* goBackSaga() {\n  yield takeEvery(actions.GO_BACK, routeGoBack);\n}\n\nexport function* pushSaga() {\n    yield takeEvery(actions.GO_TO_ROUTE, go);\n  }\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport { createHashHistory } from 'history';\nimport { routerMiddleware } from 'connected-react-router';\n\n// Reducers\nimport rootReducer from '../reducers';\n\n// Actions\nimport * as searchActions from '../actions/search';\n\n// Sagas\nimport {searchKeywordSaga,searchJobSaga} from '../sagas/searchSaga';\nimport {goBackSaga, pushSaga} from '../sagas/routerSaga';\n\n// create the saga middleware\nconst sagaMiddleware = createSagaMiddleware()\n\n// For conneted router\nexport const history = createHashHistory()\n\n// Logger setup\n\nconst logger = createLogger({\n  level: 'info',\n  collapsed: true\n});\n\nexport const configureStore = () => {\n  // Redux Configuration\n  const middleware = [];\n  const enhancers = [];\n\n  middleware.push(thunk);\n\n  // Redux DevTools Configuration\n  const actionCreators = {\n    ...searchActions,\n  };\n  // If Redux DevTools Extension is installed use it, otherwise use Redux compose\n  /* eslint-disable no-underscore-dangle */\n  const composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n      // Options: http://zalmoxisus.github.io/redux-devtools-extension/API/Arguments.html\n      actionCreators,\n    })\n    : compose;\n  /* eslint-enable no-underscore-dangle */\n\n  // Apply Middleware & Compose Enhancers\n  enhancers.push(applyMiddleware(...middleware));\n  const store = createStore(\n    rootReducer(history),\n    composeEnhancer(\n      applyMiddleware(\n        logger,\n        sagaMiddleware,\n        routerMiddleware(history),\n      ),\n    ),\n  )\n\n  // Run sagas\n  sagaMiddleware.run(searchKeywordSaga)\n  sagaMiddleware.run(searchJobSaga)\n  sagaMiddleware.run(goBackSaga)\n  sagaMiddleware.run(pushSaga)\n\n  return store;\n};","import { createMuiTheme } from '@material-ui/core/styles';\n\nexport const PALETTE = {\n    primary: \"#1A1A1D\",\n    secondary: \"#eee\",\n    darkRed: '#6F2232',\n    textColor: '#950740',\n    lightPink: '#C3073F'\n}\n\nexport const MUI_PALETTE = {\n    type: 'light',\n    primary: {\n      main: \"#04A367\",\n    },\n    secondary: {\n      main: \"#DB8201\",\n    },\n    error: {\n      main: \"#B64201\",\n    },\n    tonalOffset: 0.2,\n    contrastThreshold: 3,\n    textColor: PALETTE.primary,\n    alternateTextColor: \"#B64201\",\n}\n\nexport const createCustomTheme = () => {\n    return createMuiTheme({\n        typography: {\n            useNextVariants: true,\n            fontSize: 12,\n            fontFamily: [\n                'Nanum Gothic Coding', \n                'monospace', \n            ].join(',')\n        },\n        palette: MUI_PALETTE\n    })\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\n\nexport default class KeyWordSearcher extends Component {\n  static propTypes = {\n    value: PropTypes.string,\n    onChange: PropTypes.func\n  }\n\n  render() {\n\n    const { value, onChange } = this.props;\n\n    return <TextField\n      id=\"outlined-full-width\"\n      value={value}\n      placeholder=\"'developer' or 'teacher'\"\n      fullWidth\n      onChange={(e) => onChange(e.target.value)}\n      margin=\"dense\"\n    />\n  }\n}\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\n// Components\nimport Chip from '@material-ui/core/Chip';\n\nexport default class SearchResult extends Component {\n    static propTypes = {\n        results: PropTypes.arrayOf(\n            PropTypes.shape({\n                suggestion: PropTypes.string.isRequired,\n                parent_uuid: PropTypes.string.isRequired\n            })\n        ),\n        searchText: PropTypes.string.isRequired,\n        goTo: PropTypes.func.isRequired,\n    }\n\n    render = () => {\n        const { results, searchText, goTo } = this.props;\n\n        return <Fragment>\n            <div>\n                {_.map(\n                    results,\n                    (result,i) => <Chip\n                        key={i}\n                        style={{margin: 3}}\n                        label={result.suggestion}\n                        onClick={() => goTo(`jobs/${result.parent_uuid}`)} \n                        variant=\"outlined\"\n                        color='secondary'\n                    />\n                    )}\n            </div>\n            <h5>{results.length} titles sarting with \"{searchText}\" </h5>\n        </Fragment>\n    }\n}\n","import styled from 'styled-components';\nimport { MUI_PALETTE } from '../utils/theme';\n\n// Background image\nimport background from \"../assets/jpg/nature.jpg\";\n\n// Layout for search component\nexport const Main = styled.div`\n  color: ${MUI_PALETTE.primary.main};\n  padding:20px 100px;\n  background-color: rgba(255,255,255,0.89);\n  min-height: 50%;\n  width: 90%;\n  margin: auto;\n  font-size: 1.3rem;\n`;\n\n// Layout Page\nexport const Layout = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n`;\n\nexport const Head = styled.div`\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    height: 200px;\n    background: url(${background}) no-repeat center center fixed;\n    background-size: cover;\n    \n`;\n\nexport const Content = styled.div`\n    overflow-y: auto;\n`;\n\n// Job detail row\nexport const DetailRow = styled.div`\n    display: flex;\n    justify-content: flex-start;\n    flex-wrap: wrap;\n`;\n\nexport const DetailColumn = styled.div`\n    display: flex;\n    flex-direction: column;\n`;\n\nexport const MainArea = styled.div`\n  padding-top: 20px;\n  width: 80%;\n  margin:auto;\n`;\n// Skill Line\n\nexport const SkillLine = styled.div`\n    height: 25px;\n    align-items: center;\n    display: grid;\n    grid-template-columns: 2fr 2fr 2fr;\n    grid-template-rows: auto;\n    border: 1px solid transparent;\n`;\n\nexport const SkillHeader = styled.div`\n    display: grid;\n    grid-template-columns: 2fr 8fr;\n    align-items: center;\n    margin-bottom: 15px;\n`;\n\nexport const SkillName = styled.div`\n    font-weight: bold;\n    color: ${MUI_PALETTE.primary.main};\n`;\n\nexport const SkillElement = styled.div`\n    position: relative;\n    display: flex;\n    height: 100%;\n    justify-content: center;\n    align-items: center;\n    font-weight: bold;\n`;\n\nexport const SkillELementFirst = styled.div`\n    display: flex;\n    height: 100%;\n    justify-content: flex-start;\n    align-items: center;\n`;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Conponents\nimport KeyWordSearch from './KeyWordSearcher';\nimport SearchResults from './SearchResults';\nimport { Main } from '../../elements/layouts';\nimport { LinearProgress } from '@material-ui/core';\n\nexport default class Search extends Component {\n  static propTypes = {\n    search: PropTypes.shape({\n      searchText: PropTypes.string.isRequired,\n      searchResults: PropTypes.arrayOf(\n        PropTypes.shape({\n          suggestion: PropTypes.string.isRequired,\n          parent_uuid: PropTypes.string.isRequired\n        })\n      ),\n      loadingAutocomplete: PropTypes.bool.isRequired,\n      fetchedJob: PropTypes.bool.isRequired,\n      error: PropTypes.bool,\n      errorMessage: PropTypes.string,\n    }).isRequired,\n    setSearchText: PropTypes.func.isRequired,\n    searchId: PropTypes.func.isRequired\n  }\n\n  handleChangeText = (e,type) => {\n    this.props.setSearchText(e);\n  }\n\n  render() {\n    \n    const { search: { error, errorMessage, searchText, searchResults, loadingAutocomplete } } = this.props;\n\n    return <Main>\n      <h4>What do you want to be?</h4>\n      <KeyWordSearch value={searchText} onChange={this.handleChangeText} />\n      {error && <h5>{errorMessage}</h5>}\n      {loadingAutocomplete && <LinearProgress />}\n      {searchResults && searchResults.length && \n        <SearchResults \n          searchText={searchText}\n          results={searchResults} \n          loading={loadingAutocomplete} \n          goTo={this.props.goTo}\n        />\n      }\n    </Main>\n  }\n}\n","import { actions } from '../utils/types';\n\nexport const goTo = (route) => ({\n    type: actions.GO_TO_ROUTE,\n    payload: route\n})\n\nexport const goBack = () => ({\n    type: actions.GO_BACK,\n})","import { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport Search from '../components/Search/Search';\nimport * as searchActions from '../actions/search';\nimport * as routerActions from '../actions/router';\n\nfunction mapStateToProps(state) {\n  return {\n    search: state.search,\n  };\n}\n\n\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    ...searchActions,\n    ...routerActions\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\n// Components\nimport { LinearProgress } from '@material-ui/core';\n\n// Components\nimport {SkillLine, SkillElement, SkillELementFirst, SkillHeader, SkillName } from '../../elements/layouts';\n\nconst Skill = ({ skill_name, description, importance, level }) =>\n  <div style={{width: '100%', margin: 20}}>\n    <SkillHeader>\n        <SkillName>{_.startCase(skill_name)}</SkillName>\n        <span>{description}</span>\n    </SkillHeader>\n    <SkillLine>\n        <SkillELementFirst>Importance</SkillELementFirst>\n        <div>\n            <LinearProgress variant=\"buffer\" style={{marginBottom: 5}} color=\"secondary\" value={importance*10} valueBuffer={0} />\n        </div>\n        <SkillElement>{importance}</SkillElement>\n    </SkillLine>\n    <SkillLine>\n        <SkillELementFirst>Level required</SkillELementFirst>\n        <div>\n            <LinearProgress style={{marginBottom: 5}} variant=\"buffer\" color=\"secondary\"  value={level*10} valueBuffer={0}/>\n        </div>\n        <SkillElement>{level}</SkillElement>\n    </SkillLine>\n  </div>\n\nSkill.propTypes = {\n    skills: PropTypes.arrayOf(\n        PropTypes.shape({\n            skill_uuid: PropTypes.string.isRequired,\n            skill_name: PropTypes.string.isRequired,\n            skill_type: PropTypes.string.isRequired,\n            description: PropTypes.string.isRequired,\n            normalized_skill_name: PropTypes.string.isRequired,\n            importance: PropTypes.number.isRequired,\n            level: PropTypes.number.isRequired\n        })\n    ),\n};\n\nexport default Skill;\n","import React, { Fragment, Component } from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\n// Components\nimport Chip from '@material-ui/core/Chip';\nimport { DetailRow} from '../../elements/layouts';\nimport Button from '@material-ui/core/Button';\nimport Back from '@material-ui/icons/ArrowBack';\nimport Skill from './Skill';\n\n\nclass JobTypeDetail extends Component {\n    \n    static propTypes = {\n      goBack: PropTypes.func.isRequired,\n      fetchedJobDetail: PropTypes.shape({\n        description: PropTypes.string.isRequired,\n        onet_soc_code: PropTypes.string.isRequired,\n        related_job_titles: PropTypes.arrayOf(\n          PropTypes.shape({\n            uuid: PropTypes.string.isRequired,\n            title: PropTypes.string.isRequired\n          })\n        ),\n        skills: PropTypes.arrayOf(\n          PropTypes.shape({\n            skill_uuid: PropTypes.string.isRequired,\n            skill_name: PropTypes.string.isRequired,\n            skill_type: PropTypes.string.isRequired,\n            description: PropTypes.string.isRequired,\n            normalized_skill_name: PropTypes.string.isRequired,\n            importance: PropTypes.number.isRequired,\n            level: PropTypes.number.isRequired\n          })\n        ),\n        title: PropTypes.string.isRequired,\n        unusual_job_titles: PropTypes.arrayOf(\n          PropTypes.shape({\n            uuid: PropTypes.string.isRequired,\n            title: PropTypes.string.isRequired\n          })\n        ),\n        uuid: PropTypes.string.isRequired\n      })\n    }\n\n    render = () => {\n        const { fetchedJobDetail } = this.props;\n        return <Fragment>\n            <h3>\n              {fetchedJobDetail.title}\n            </h3>\n            <p style={{padding: 10}}>\n              {fetchedJobDetail.description}\n            </p>\n            <Button color=\"primary\" onClick={this.props.goBack}><Back fontSize=\"small\"/>Back to search</Button>\n          <h3>\n            Related Titles\n          </h3>\n            <DetailRow>\n              {_.map(\n                _.take(\n                  fetchedJobDetail.related_job_titles,\n                  5\n                  ),\n                title => <Chip style={{fontWeight: 900, margin: 8}} color=\"primary\" variant=\"outlined\" key={title.uuid} label={title.title}/>\n              )}\n            </DetailRow>\n          <h3>\n            Related Skills\n          </h3>\n            <DetailRow>\n              {_.map(\n                _.take(\n                  fetchedJobDetail.skills.sort((a,b) => a.importance > b.importance ? -1 : a.importance > b.importance ? 1 : 0),\n                  10\n                  ),\n                skill => <Skill key={skill.skill_uuid} style={{margin: 15}} {...skill}/>\n              )}\n            </DetailRow>\n        </Fragment>\n      }\n}\n\nexport default JobTypeDetail;","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\n// Components\nimport JobTypeDetail from './JobTypeDetail'\nimport { LinearProgress } from '@material-ui/core';\nimport { MainArea } from '../../elements/layouts';\n\nexport default class JobDetail extends Component {\n  static propTypes = {\n    match: PropTypes.shape({\n      params: PropTypes.shape({\n        jobId: PropTypes.string.isRequired\n      })\n    }),\n    search: PropTypes.shape({\n      fetchedJobDetail: PropTypes.shape({\n        description: PropTypes.string.isRequired,\n        onet_soc_code: PropTypes.string.isRequired,\n        related_job_titles: PropTypes.arrayOf(\n          PropTypes.shape({\n            uuid: PropTypes.string.isRequired,\n            title: PropTypes.string.isRequired\n          })\n        ),\n        skills: PropTypes.arrayOf(\n          PropTypes.shape({\n            skill_uuid: PropTypes.string.isRequired,\n            skill_name: PropTypes.string.isRequired,\n            skill_type: PropTypes.string.isRequired,\n            description: PropTypes.string.isRequired,\n            normalized_skill_name: PropTypes.string.isRequired,\n            importance: PropTypes.number.isRequired,\n            level: PropTypes.number.isRequired\n          })\n        ),\n        title: PropTypes.string.isRequired,\n        unusual_job_titles: PropTypes.arrayOf(\n          PropTypes.shape({\n            uuid: PropTypes.string.isRequired,\n            title: PropTypes.string.isRequired\n          })\n        ),\n        uuid: PropTypes.string.isRequired\n      }),\n      fetchedJob: PropTypes.bool\n    }),\n  }\n\n  componentDidMount = () => {\n    const { match: { params: { jobId } } } = this.props;\n    this.props.searchId(jobId)\n  }\n  \n\n  render() {\n    const { search: { fetchingJob, fetchedJobDetail, fetchedJob} } = this.props;\n    if(fetchingJob) return <LinearProgress />\n    return (\n      <MainArea>\n        {fetchedJob && fetchedJobDetail && <JobTypeDetail goBack={this.props.goBack} fetchedJobDetail={fetchedJobDetail} />}\n      </MainArea> \n    )\n  }\n}\n","import { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport JobDetail from '../components/JobDetail/JobDetail';\nimport { searchId } from '../actions/search';\nimport { goBack } from '../actions/router';\n\nfunction mapStateToProps(state, props) {\n  return {\n    search: state.search,\n  };\n}\n\n\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    goBack,\n    searchId\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(JobDetail);","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport {withRouter} from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types'\n\n// Components\nimport { Layout, Content, Head } from '../elements/layouts';\n// Actions\nimport * as routerActions from '../actions/router';\n\nclass LayoutPage extends Component {\n    static propTypes = {\n        goTo: PropTypes.func.isRequired,\n        goBack: PropTypes.func.isRequired\n    }\n  \n    render() {\n        return <Layout>\n            <Head></Head>\n            <Content>\n                {this.props.children}\n            </Content>\n        </Layout>\n    }\n  }\n  \n\nfunction mapStateToProps(state, props) {\n    return {}\n}\n  \n  \n  \nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        ...routerActions\n    }, dispatch);\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(LayoutPage));","import React, { Component, Fragment } from 'react';\nimport { Provider } from 'react-redux';\nimport { Switch, Route } from 'react-router';\nimport { ConnectedRouter } from 'connected-react-router'\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\n\nimport { configureStore, history } from './store/configureStore';\nimport { createCustomTheme } from './utils/theme';\n\n// Container\nimport SearchPage from './containers/SearchPage';\nimport JobPage from './containers/JobPage';\nimport LayoutPage from './containers/LayoutPage';\n\n// Styles\nimport './index.css';\nimport \"typeface-nanum-gothic-coding\";\n\nconst muiTheme = createCustomTheme({\n  paletteType: 'dark',\n});\n\n// Redux store\nconst store = configureStore()\n\nclass App extends Component {\n  render() {\n    return <Provider store={store}>\n      <ConnectedRouter basename={process.env.PUBLIC_URL} history={history}>\n        <MuiThemeProvider theme={muiTheme}>\n          <Fragment>\n            <CssBaseline/>\n            <LayoutPage>\n              <Switch>\n                <Route path=\"/jobs/:jobId\" render={(props) => <JobPage {...props}/>} />\n                <Route path=\"/\" render={(props) => <SearchPage {...props}/>} />\n              </Switch>\n            </LayoutPage>\n          </Fragment>\n        </MuiThemeProvider>\n      </ConnectedRouter>\n    </Provider>\n  }\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router'\nimport search from './search';\n\nexport default (history)  => combineReducers({\n    router: connectRouter(history),\n    search,\n});","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}